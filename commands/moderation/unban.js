const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder } = require('discord.js');
const NeuralNetworks = require('../../services/NeuralNetworks.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('unban')
    .setDescription('Unban m·ªôt ng∆∞·ªùi d√πng kh·ªèi server')
    .addStringOption(option => 
      option.setName('userid')
        .setDescription('ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn unban')
        .setRequired(true))
    .addStringOption(option => 
      option.setName('reason')
        .setDescription('L√Ω do unban')
        .setRequired(false))
    .setDefaultMemberPermissions(PermissionFlagsBits.BanMembers),

  async execute(interaction) {
    // Ki·ªÉm tra quy·ªÅn
    if (!interaction.member.permissions.has(PermissionFlagsBits.BanMembers)) {
      return interaction.reply({ 
        content: 'B·∫°n kh√¥ng c√≥ quy·ªÅn unban ng∆∞·ªùi d√πng!', 
        ephemeral: true 
      });
    }

    const userId = interaction.options.getString('userid');
    const reason = interaction.options.getString('reason') || 'Kh√¥ng c√≥ l√Ω do ƒë∆∞·ª£c cung c·∫•p';

    // Ki·ªÉm tra xem ID c√≥ h·ª£p l·ªá kh√¥ng
    if (!/^\d{17,19}$/.test(userId)) {
      return interaction.reply({
        content: 'ID ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá. ID ph·∫£i l√† m·ªôt chu·ªói s·ªë t·ª´ 17-19 ch·ªØ s·ªë.',
        ephemeral: true
      });
    }

    await interaction.deferReply();
    
    try {
      // Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ b·ªã ban kh√¥ng
      const banList = await interaction.guild.bans.fetch();
      const bannedUser = banList.find(ban => ban.user.id === userId);
      
      if (!bannedUser) {
        return interaction.editReply({
          content: 'Ng∆∞·ªùi d√πng n√†y kh√¥ng b·ªã ban t·ª´ server.',
          ephemeral: true
        });
      }
      
      // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
      const user = bannedUser.user;
      
      // S·ª≠ d·ª•ng NeuralNetworks ƒë·ªÉ t·∫°o th√¥ng b√°o
      const prompt = `T·∫°o m·ªôt th√¥ng b√°o ng·∫Øn g·ªçn, t√≠ch c·ª±c v·ªÅ vi·ªác unban ng∆∞·ªùi d√πng ${user.username} v·ªõi l√Ω do: "${reason}". Th√¥ng b√°o n√™n c√≥ gi·ªçng ƒëi·ªáu c·ªßa m·ªôt admin c√¥ng b·∫±ng v√† khoan dung, kh√¥ng qu√° 2 c√¢u. C√≥ th·ªÉ th√™m 1 emoji ph√π h·ª£p.`;
      
      const aiResponse = await NeuralNetworks.getCompletion(prompt);
      
      // T·∫°o embed th√¥ng b√°o
      const unbanEmbed = new EmbedBuilder()
        .setColor(0x00FFFF)
        .setTitle(`üîì Ng∆∞·ªùi d√πng ƒë√£ ƒë∆∞·ª£c unban`)
        .setDescription(aiResponse)
        .addFields(
          { name: 'Ng∆∞·ªùi d√πng', value: `${user.tag}`, inline: true },
          { name: 'ID', value: user.id, inline: true },
          { name: 'L√Ω do', value: reason, inline: false }
        )
        .setFooter({ text: `Unbanned by ${interaction.user.tag}` })
        .setTimestamp();

      // Unban ng∆∞·ªùi d√πng
      await interaction.guild.members.unban(user, reason);
      
      // G·ª≠i th√¥ng b√°o
      await interaction.editReply({ embeds: [unbanEmbed] });
      
    } catch (error) {
      console.error('L·ªói khi unban ng∆∞·ªùi d√πng:', error);
      await interaction.editReply({ 
        content: `ƒê√£ x·∫£y ra l·ªói khi unban ng∆∞·ªùi d√πng: ${error.message}`, 
        ephemeral: true 
      });
    }
  },
};
