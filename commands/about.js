const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ActionRowBuilder, ButtonStyle } = require('discord.js');
const grokClient = require('../services/grokClient');
const os = require('os');

module.exports = {
	data: new SlashCommandBuilder()
		.setName('about')
		.setDescription('Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt v·ªÅ Luna bot'),
	
	async execute(interaction) {
		// L·∫•y th√¥ng tin v·ªÅ model t·ª´ grokClient - fix method name
		const modelName = grokClient.displayModelName;
		
		// T√≠nh th·ªùi gian ho·∫°t ƒë·ªông c·ªßa bot
		const uptime = process.uptime();
		const days = Math.floor(uptime / 86400);
		const hours = Math.floor((uptime % 86400) / 3600);
		const minutes = Math.floor((uptime % 3600) / 60);
		const uptimeString = `${days} ng√†y, ${hours} gi·ªù, ${minutes} ph√∫t`;
		
		// L·∫•y th√¥ng tin h·ªá th·ªëng
		const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
		const serverCount = interaction.client.guilds.cache.size;
		
		// T·∫°o embed ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin
		const aboutEmbed = new EmbedBuilder()
			.setColor(0xb967ff)  // M√†u t√≠m nh·∫π
			.setTitle('üåô Gi·ªõi thi·ªáu v·ªÅ Luna Bot')
			.setThumbnail(interaction.client.user.displayAvatarURL({ dynamic: true }))
			.setDescription('Luna l√† bot tr·ª£ l√Ω AI ti√™n ti·∫øn v·ªõi t√≠nh c√°ch th√¢n thi·ªán v√† d·ªÖ th∆∞∆°ng, ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ tr√≤ chuy·ªán t·ª± nhi√™n v√† h·ªó tr·ª£ b·∫°n trong nhi·ªÅu t√°c v·ª• kh√°c nhau v·ªõi giao di·ªán th√¢n thi·ªán v√† tr·ª±c quan.')
			.addFields(
				{ 
					name: 'ü§ñ Th√¥ng tin k·ªπ thu·∫≠t', 
					value: `‚Ä¢ **Model AI**: ${modelName}\n‚Ä¢ **N·ªÅn t·∫£ng**: X.AI (Grok)\n‚Ä¢ **Ng√¥n ng·ªØ ch√≠nh**: Vietnamese, English`
				},
				{
					name: 'üìä Hi·ªáu nƒÉng',
					value: `‚Ä¢ **Uptime**: ${uptimeString}\n‚Ä¢ **Memory**: ${memoryUsage} MB\n‚Ä¢ **Servers**: ${serverCount}\n‚Ä¢ **Node.js**: ${process.version}`
				},
				{
					name: 'üí¨ T√≠nh nƒÉng tr√≤ chuy·ªán',
					value: '‚Ä¢ Tr√≤ chuy·ªán t·ª± nhi√™n v·ªõi Luna b·∫±ng c√°ch mention (@Luna)\n‚Ä¢ Duy tr√¨ ng·ªØ c·∫£nh cu·ªôc h·ªôi tho·∫°i\n‚Ä¢ Tr·∫£ l·ªùi th√¥ng minh v√† th√¢n thi·ªán\n‚Ä¢ H·ªó tr·ª£ ti·∫øng Vi·ªát v√† ti·∫øng Anh'
				},
				{
					name: 'üñºÔ∏è T·∫°o h√¨nh ·∫£nh AI',
					value: '‚Ä¢ S·ª≠ d·ª•ng l·ªánh "**v·∫Ω [m√¥ t·∫£]**" ƒë·ªÉ t·∫°o h√¨nh ·∫£nh\n‚Ä¢ H·ªó tr·ª£ nhi·ªÅu phong c√°ch v√† ch·ªß ƒë·ªÅ\n‚Ä¢ T·∫°o h√¨nh ·∫£nh ch·∫•t l∆∞·ª£ng cao t·ª´ m√¥ t·∫£ vƒÉn b·∫£n'
				},
				{
					name: 'üíª H·ªó tr·ª£ l·∫≠p tr√¨nh',
					value: '‚Ä¢ T·∫°o m√£ ngu·ªìn t·ª´ m√¥ t·∫£ y√™u c·∫ßu\n‚Ä¢ Gi·∫£i th√≠ch m√£ ngu·ªìn hi·ªán c√≥\n‚Ä¢ G·ª° l·ªói v√† t·ªëi ∆∞u h√≥a m√£'
				},
				{
					name: 'üìù L·ªánh h·ªØu √≠ch',
					value: '‚Ä¢ `/ping` - Ki·ªÉm tra ƒë·ªô tr·ªÖ v√† tr·∫°ng th√°i ho·∫°t ƒë·ªông\n‚Ä¢ `/about` - Xem th√¥ng tin n√†y\n‚Ä¢ `/help` - Xem danh s√°ch l·ªánh ƒë·∫ßy ƒë·ªß\n‚Ä¢ `@Luna [tin nh·∫Øn]` - Tr√≤ chuy·ªán v·ªõi Luna\n‚Ä¢ `x√≥a l·ªãch s·ª≠` - X√≥a l·ªãch s·ª≠ h·ªôi tho·∫°i'
				},
				{
					name: 'üõ†Ô∏è Qu·∫£n l√Ω l·ªãch s·ª≠',
					value: 'Luna c√≥ th·ªÉ l∆∞u tr·ªØ v√† ghi nh·ªõ ng·ªØ c·∫£nh cu·ªôc tr√≤ chuy·ªán ƒë·ªÉ t·∫°o tr·∫£i nghi·ªám m∆∞·ª£t m√† v√† li√™n t·ª•c. ƒê·ªÉ x√≥a l·ªãch s·ª≠ h·ªôi tho·∫°i c·ªßa b·∫°n, ch·ªâ c·∫ßn g·ª≠i tin nh·∫Øn "**x√≥a l·ªãch s·ª≠**" ho·∫∑c "**reset conversation**".'
				},
				{
					name: 'üë®‚Äçüíª Nh√† ph√°t tri·ªÉn',
					value: 'Luna ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi s4ory, v·ªõi m·ª•c ti√™u t·∫°o ra m·ªôt tr·∫£i nghi·ªám AI th√¢n thi·ªán v√† h·ªØu √≠ch cho c·ªông ƒë·ªìng Discord.'
				},
				{
					name: 'üîó Li√™n k·∫øt & T√†i nguy√™n',
					value: '[GitHub](https://gitlab.com/s4ory/luna) | [B√°o c√°o l·ªói](https://gitlab.com/s4ory/luna/-/issues) | [Website](https://luna.dev)'
				}
			)
			.setFooter({ text: 'Luna Bot v1.0.0' })
			.setTimestamp();

		// T·∫°o c√°c n√∫t t∆∞∆°ng t√°c
		const supportButton = new ButtonBuilder()
			.setLabel('H·ªó tr·ª£')
			.setURL('https://discord.gg/52hSMAt')
			.setStyle(ButtonStyle.Link);
			
		const inviteButton = new ButtonBuilder()
			.setLabel('Th√™m Luna v√†o server')
			.setURL(`https://discord.com/api/oauth2/authorize?client_id=${interaction.client.user.id}&permissions=8&scope=bot%20applications.commands`)
			.setStyle(ButtonStyle.Link);
			
		const docsButton = new ButtonBuilder()
			.setLabel('T√†i li·ªáu')
			.setURL('https://luna.dev/docs')
			.setStyle(ButtonStyle.Link);

		const row = new ActionRowBuilder().addComponents(supportButton, inviteButton, docsButton);

		// Ph·∫£n h·ªìi v·ªõi embed v√† c√°c n√∫t - update deprecated option
		await interaction.reply({ 
			embeds: [aboutEmbed], 
			components: [row], 
			flags: [] // Modern approach - empty array means not ephemeral
		});
	},
};
