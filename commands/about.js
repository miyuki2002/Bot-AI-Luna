const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ActionRowBuilder, ButtonStyle } = require('discord.js');
const NeuralNetworks = require('../services/NeuralNetworks');
const os = require('os');

module.exports = {
	data: new SlashCommandBuilder()
		.setName('about')
		.setDescription('Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt v·ªÅ Luna bot'),
	
	async execute(interaction) {
		// L·∫•y th√¥ng tin v·ªÅ model t·ª´ NeuralNetworks
		const modelName = NeuralNetworks.Model;
		
		// T√≠nh th·ªùi gian ho·∫°t ƒë·ªông c·ªßa bot
		const uptime = process.uptime();
		const days = Math.floor(uptime / 86400);
		const hours = Math.floor((uptime % 86400) / 3600);
		const minutes = Math.floor((uptime % 3600) / 60);
		const uptimeString = `${days}d ${hours}h ${minutes}m`;
		
		// L·∫•y th√¥ng tin h·ªá th·ªëng
		const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
		const serverCount = interaction.client.guilds.cache.size;
		
		// T·∫°o embed ƒë·∫πp m·∫Øt v√† g·ªçn g√†ng h∆°n
		const aboutEmbed = new EmbedBuilder()
			.setColor(0xd580ff)  // M√†u t√≠m nh·∫°t h∆°n v√† ƒë·∫πp m·∫Øt
			.setTitle('‚ú® Luna AI - Tr·ª£ l√Ω th√¥ng minh c·ªßa b·∫°n')
			.setThumbnail(interaction.client.user.displayAvatarURL({ dynamic: true, size: 512 }))
			.setDescription('*Luna l√† tr·ª£ l√Ω AI th√¢n thi·ªán v√† d·ªÖ th∆∞∆°ng, lu√¥n s·∫µn s√†ng tr√≤ chuy·ªán v√† gi√∫p ƒë·ª° b·∫°n v·ªõi kh·∫£ nƒÉng tr√≠ tu·ªá nh√¢n t·∫°o ti√™n ti·∫øn.*')
			.addFields(
				{ 
					name: 'ü§ñ **Th√¥ng tin k·ªπ thu·∫≠t**', 
					value: `‚Ä¢ Model: **${modelName}**\n‚Ä¢ Runtime: **${uptimeString}**\n‚Ä¢ Servers: **${serverCount}**\n‚Ä¢ Memory: **${memoryUsage} MB**`,
					inline: true
				},
				{
					name: 'üåü **T√≠nh nƒÉng ch√≠nh**',
					value: '‚Ä¢ **Tr√≤ chuy·ªán** th√¥ng minh (mention @Luna)\n‚Ä¢ **T·∫°o h√¨nh ·∫£nh** AI (v·∫Ω/t·∫°o h√¨nh)\n‚Ä¢ **H·ªó tr·ª£ l·∫≠p tr√¨nh** v√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ\n‚Ä¢ **ƒêa ng√¥n ng·ªØ** (Ti·∫øng Vi·ªát & English)',
					inline: true
				},
				{
					name: 'üìã **L·ªánh h·ªØu √≠ch**',
					value: '‚Ä¢ `@Luna [tin nh·∫Øn]` - Tr√≤ chuy·ªán\n‚Ä¢ `v·∫Ω [m√¥ t·∫£]` - T·∫°o h√¨nh ·∫£nh AI\n‚Ä¢ `/ping` - Ki·ªÉm tra tr·∫°ng th√°i\n‚Ä¢ `x√≥a l·ªãch s·ª≠` - ƒê·∫∑t l·∫°i cu·ªôc tr√≤ chuy·ªán',
				}
			)
			.setImage('https://i.imgur.com/KCtaQTH.png') // Banner image - thay b·∫±ng URL c·ªßa b·∫°n
			.setFooter({ 
				text: `Luna Bot v1.0.0 ‚Ä¢ Node ${process.version}`, 
				iconURL: 'https://i.imgur.com/xEhZnPu.png'  // Logo nh·ªè - thay b·∫±ng URL c·ªßa b·∫°n
			})
			.setTimestamp();

		// C√°c n√∫t t∆∞∆°ng t√°c ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·∫πp m·∫Øt h∆°n
		const row = new ActionRowBuilder().addComponents(
			new ButtonBuilder()
				.setLabel('‚úâÔ∏è M·ªùi Luna')
				.setURL(`https://discord.com/api/oauth2/authorize?client_id=${interaction.client.user.id}&permissions=8&scope=bot%20applications.commands`)
				.setStyle(ButtonStyle.Link),
				
			new ButtonBuilder()
				.setLabel('üîç T√†i li·ªáu')
				.setURL('https://lunabot.art/docs')
				.setStyle(ButtonStyle.Link),
				
			new ButtonBuilder()
				.setLabel('üí¨ H·ªó tr·ª£')
				.setURL('https://discord.gg/52hSMAt')
				.setStyle(ButtonStyle.Link),
				
			new ButtonBuilder()
				.setLabel('üåê Website')
				.setURL('https://lunabot.art')
				.setStyle(ButtonStyle.Link)
		);

		// Ph·∫£n h·ªìi v·ªõi embed v√† c√°c n√∫t
		await interaction.reply({ 
			embeds: [aboutEmbed], 
			components: [row],
			flags: []
		});
	},
};
