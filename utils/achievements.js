const { AttachmentBuilder, EmbedBuilder } = require('discord.js');
const { createCanvas, loadImage, registerFont } = require('canvas');
const path = require('path');
const fs = require('fs');

/**
 * T·∫°o canvas th√†nh t·ª±u "First XP"
 * @param {Object} data - D·ªØ li·ªáu ƒë·ªÉ v·∫Ω th√†nh t·ª±u
 * @returns {Promise<Buffer>} - Buffer ch·ª©a h√¨nh ·∫£nh th√†nh t·ª±u
 */
async function createFirstXPAchievement(data) {
  // C·∫•u h√¨nh canvas
  const width = 800;
  const height = 300;
  const canvas = createCanvas(width, height);
  const ctx = canvas.getContext('2d');
  
  // N·ªÅn gradient
  const gradient = ctx.createLinearGradient(0, 0, width, height);
  gradient.addColorStop(0, '#1a237e');
  gradient.addColorStop(1, '#4527a0');
  ctx.fillStyle = gradient;
  ctx.fillRect(0, 0, width, height);
  
  // Th√™m hi·ªáu ·ª©ng √°nh s√°ng
  ctx.fillStyle = 'rgba(255, 255, 255, 0.05)';
  ctx.beginPath();
  ctx.arc(width - 100, 80, 100, 0, 2 * Math.PI);
  ctx.fill();
  
  // Thi·∫øt l·∫≠p font ch·ªØ
  ctx.textAlign = 'center';
  
  // V·∫Ω icon th√†nh t·ª±u
  try {
    // S·ª≠ d·ª•ng icon t·ª´ assets n·∫øu t·ªìn t·∫°i, n·∫øu kh√¥ng s·ª≠ d·ª•ng h√¨nh ·∫£nh m·∫∑c ƒë·ªãnh
    let iconPath = path.join(__dirname, '../assets/xp-icon.png');
    if (!fs.existsSync(iconPath)) {
      iconPath = path.join(__dirname, '../assets/luna-avatar.png');
    }
    
    const icon = await loadImage(iconPath);
    
    // V·∫Ω icon h√¨nh tr√≤n
    ctx.save();
    ctx.beginPath();
    ctx.arc(150, 150, 80, 0, Math.PI * 2);
    ctx.closePath();
    ctx.clip();
    
    ctx.drawImage(icon, 70, 70, 160, 160);
    ctx.restore();
    
    // V·∫Ω vi·ªÅn tr√≤n cho icon
    ctx.strokeStyle = '#ffd54f';
    ctx.lineWidth = 5;
    ctx.beginPath();
    ctx.arc(150, 150, 80, 0, Math.PI * 2);
    ctx.stroke();
  } catch (err) {
    console.error('Kh√¥ng th·ªÉ t·∫£i h√¨nh ·∫£nh icon:', err);
  }
  
  // Ti√™u ƒë·ªÅ th√†nh t·ª±u
  ctx.font = 'bold 40px Arial';
  ctx.fillStyle = '#ffffff';
  ctx.fillText('ACHIEVEMENT UNLOCKED!', width / 2, 70);
  
  // T√™n th√†nh t·ª±u
  ctx.font = 'bold 36px Arial';
  ctx.fillStyle = '#ffd54f';
  ctx.fillText('First Steps', width / 2, 130);
  
  // M√¥ t·∫£ th√†nh t·ª±u
  ctx.font = '24px Arial';
  ctx.fillStyle = '#e0e0e0';
  ctx.fillText(`B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c ${data.points} XP ƒë·∫ßu ti√™n trong ${data.serverName}!`, width / 2, 180);
  
  // Xu h∆∞·ªõng ti·∫øn tri·ªÉn
  ctx.fillStyle = '#4db6ac';
  ctx.fillText(`ƒê√£ ƒë·∫°t C·∫•p ƒë·ªô ${data.level}`, width / 2, 220);
  
  // XP m·ªõi
  ctx.font = 'bold 18px Arial';
  ctx.fillStyle = '#ffffff';
  ctx.fillText(`T·ªïng XP: ${data.totalXp} | ƒê√£ nh·∫≠n: +${data.points} XP`, width / 2, 260);
  
  return canvas.toBuffer();
}

/**
 * G·ª≠i th√¥ng b√°o th√†nh t·ª±u "First XP" cho ng∆∞·ªùi d√πng
 * @param {Object} message - Discord message object
 * @param {Object} xpData - D·ªØ li·ªáu XP ƒë√£ nh·∫≠n ƒë∆∞·ª£c
 */
async function sendFirstXPAchievement(message, xpData) {
  try {
    const data = {
      userId: message.author.id,
      username: message.author.username,
      avatarURL: message.author.displayAvatarURL({ extension: 'png' }),
      points: xpData.points,
      level: xpData.level,
      totalXp: xpData.totalXp,
      serverName: message.guild.name
    };
    
    // T·∫°o h√¨nh ·∫£nh th√†nh t·ª±u
    const achievementImage = await createFirstXPAchievement(data);
    
    // T·∫°o file attachment t·ª´ buffer
    const attachment = new AttachmentBuilder(achievementImage, { name: 'achievement.png' });
    
    // T·∫°o embed message
    const embed = new EmbedBuilder()
      .setColor('#7289DA')
      .setTitle('üèÜ Th√†nh t·ª±u m·ªõi m·ªü kh√≥a!')
      .setDescription(`Ch√∫c m·ª´ng ${message.author}! B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c XP ƒë·∫ßu ti√™n trong **${message.guild.name}**!`)
      .setImage('attachment://achievement.png')
      .setFooter({ text: 'Ti·∫øp t·ª•c g·ª≠i tin nh·∫Øn ƒë·ªÉ nh·∫≠n th√™m XP v√† l√™n c·∫•p!' })
      .setTimestamp();
    
    // G·ª≠i tin nh·∫Øn th√†nh t·ª±u
    await message.channel.send({ embeds: [embed], files: [attachment] });
    console.log(`ƒê√£ g·ª≠i th√†nh t·ª±u "First XP" cho ${message.author.tag} trong ${message.guild.name}`);
    
  } catch (error) {
    console.error('L·ªói khi g·ª≠i th√†nh t·ª±u First XP:', error);
  }
}

/**
 * Ki·ªÉm tra c√°c th√†nh t·ª±u
 * @param {Object} message - Discord message object
 * @param {Object} xpData - D·ªØ li·ªáu XP ƒë√£ nh·∫≠n ƒë∆∞·ª£c
 */
async function checkAchievements(message, xpData) {
  try {
    // Ki·ªÉm tra n·∫øu ƒë√¢y l√† l·∫ßn ƒë·∫ßu ti√™n nh·∫≠n XP trong server n√†y
    if (xpData.isFirstXP) {
      await sendFirstXPAchievement(message, xpData);
    }
    
    // C√≥ th·ªÉ th√™m c√°c th√†nh t·ª±u kh√°c ·ªü ƒë√¢y trong t∆∞∆°ng lai
    
  } catch (error) {
    console.error('L·ªói khi ki·ªÉm tra th√†nh t·ª±u:', error);
  }
}

module.exports = {
  checkAchievements,
  sendFirstXPAchievement,
  createFirstXPAchievement
};